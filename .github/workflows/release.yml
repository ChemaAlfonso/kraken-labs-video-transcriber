name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v1.0.0)"
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: darwin
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win32

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build and package for macOS
        if: matrix.os == 'macos-latest'
        run: npm run make:macos

      - name: Build and package for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run make:linux

      - name: Build and package for Windows
        if: matrix.os == 'windows-latest'
        run: npm run make:windows

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-builds
          path: out/make/zip/*.zip
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure
        run: find ./artifacts -type f -name "*.zip" | head -20

      - name: Create Release and Upload Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${{ github.event.inputs.tag || github.ref_name }}"

          # Create release notes
          cat > release-notes.md << 'EOF'
          ## What's Changed

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${TAG_NAME}

          ## Downloads

          Choose the appropriate version for your operating system:

          - **macOS (Apple Silicon)**: Download the ARM64 version
          - **macOS (Intel)**: Download the x64 version  
          - **Windows**: Download the win32-x64 version
          - **Linux**: Download the linux-x64 version

          All downloads are portable ZIP files - just extract and run!
          EOF

          # Create the release
          gh release create "${TAG_NAME}" \
            --title "Kraken Labs Video Transcriber ${TAG_NAME}" \
            --notes-file release-notes.md \
            --draft=false \
            --prerelease=false

          # Upload all zip files as assets
          find ./artifacts -name "*.zip" -type f | while read -r file; do
            echo "Uploading: $(basename "$file")"
            gh release upload "${TAG_NAME}" "$file"
          done
